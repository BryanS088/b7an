Round 1

#include <Servo.h>

// Crear un objeto Servo
Servo miServo;

// Definir el pin al que está conectado el servo
const int pinServo = 8;

// Definir los pines del módulo BTN7960
const int R_EN = 5;
const int R_PWM = 6;
const int L_EN = 4;
const int L_PWM = 7;

// Variable de control para asegurarse de que el código se ejecute una vez
bool codeExecuted = false;

void setup() {
  // Iniciar la comunicación serial a 9600 baudios
  Serial.begin(9600);
  
  // Adjuntar el servo al pin 8
  miServo.attach(pinServo);
  
  // Configurar pines del módulo BTN7960 como salidas
  pinMode(R_EN, OUTPUT);
  pinMode(R_PWM, OUTPUT);
  pinMode(L_EN, OUTPUT);
  pinMode(L_PWM, OUTPUT);
  
  // Inicializar el módulo BTN7960
  digitalWrite(R_EN, HIGH); // Habilitar módulo derecho
  digitalWrite(L_EN, HIGH); // Habilitar módulo izquierdo
}

void MotorForward(int Velocity) {
  analogWrite(R_PWM, 0);
  analogWrite(L_PWM, Velocity);
}

void MotorBackward(int Velocity) {
  analogWrite(R_PWM, Velocity);
  analogWrite(L_PWM, 0);
}

void loop() {
  // Solo se ejecuta si codeExecuted es falso
  if (!codeExecuted) {
// Giro 1
   miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1600);

  miServo.write(110);       // centro 1 segundo
    delay(500); 
      MotorForward(120);       // Avanza 2 segundo
    delay(100);

    miServo.write(60);       // centro 1 segundo
    delay(1000); 

    // Detener el robot al final de las vueltas
    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100);  
    // Pausa al final para detener el robot por completo

 miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1000);

  miServo.write(110);       // centro 1 segundo
    delay(800); 
      MotorForward(180);       // Avanza 2 segundo
    delay(100);
    
    miServo.write(60);       // centro 1 segundo
    delay(1000); 

 // Detener el robot al final de las vueltas

    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100); 

     // Pausa al final para detener el robot por completo

      miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1000);

  miServo.write(110);       // centro 1 segundo
    delay(800); 
      MotorForward(180);       // Avanza 2 segundo
    delay(100);
    
    miServo.write(60);       // centro 1 segundo
    delay(1000); 

// Detener el robot al final de las vueltas

    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100); 

     // Pausa al final para detener el robot por completo

// Giro 2
   miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1200);

  miServo.write(110);       // centro 1 segundo
    delay(500); 
      MotorForward(120);       // Avanza 2 segundo
    delay(100);

    miServo.write(60);       // centro 1 segundo
    delay(1000); 
    // Detener el robot al final de las vueltas
    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100);  
    // Pausa al final para detener el robot por completo

 miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1000);

  miServo.write(110);       // centro 1 segundo
    delay(800); 
      MotorForward(180);       // Avanza 2 segundo
    delay(100);
    
    miServo.write(60);       // centro 1 segundo
    delay(1000); 

 // Detener el robot al final de las vueltas
    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100); 
     // Pausa al final para detener el robot por completo

      miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1000);

  miServo.write(110);       // centro 1 segundo
    delay(800); 
      MotorForward(180);       // Avanza 2 segundo
    delay(100);
    
    miServo.write(60);       // centro 1 segundo
    delay(1000); 
    
// Detener el robot al final de las vueltas
    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100); 
     // Pausa al final para detener el robot por completo

      miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1000);

  miServo.write(110);       // centro 1 segundo
    delay(800); 
      MotorForward(180);       // Avanza 2 segundo
    delay(100);
    
    miServo.write(60);       // centro 1 segundo
    delay(1000); 

 // Detener el robot al final de las vueltas
    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100); 
     // Pausa al final para detener el robot por completo

      miServo.write(60);       // centro 1 segundo
    delay(1000); 
      MotorForward(120);       // Avanza 2 segundo
    delay(1000);

  miServo.write(110);       // centro 1 segundo
    delay(800); 
      MotorForward(180);       // Avanza 2 segundo
    delay(100);
    
    miServo.write(60);       // centro 1 segundo
    delay(1000); 
    
// Detener el robot al final de las vueltas
    MotorBackward(200);
    delay(100);
    MotorForward(0);
    delay(1100); 
     // Pausa al final para detener el robot por completo

  // Detener el robot al final de las vueltas
    MotorForward(0);
    delay(1100);  // Pausa al final para detener el robot por completo
    // Establecer la variable de control en true para evitar futuras ejecuciones
    codeExecuted = true;
  }
  // El resto del código en loop() permanecerá vacío o incluirá acciones que desees ejecutar continuamente
}
